#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>

const int led1 = 32;
const int ultraT1 = 22;
const int ultraE1 = 21;
const float distanciaLimite = 50.0;

const int lcd_dc = 15;
const int lcd_cs = 12;
const int lcd_rst = 4;

SPIClass hspi(HSPI);
Adafruit_PCD8544 display = Adafruit_PCD8544(lcd_dc, lcd_cs, lcd_rst, &hspi);

void setup() {
  pinMode(led1, OUTPUT);
  pinMode(ultraT1, OUTPUT);
  pinMode(ultraE1, INPUT);

  Serial.begin(115200);

  hspi.begin(14, 2, 13, 12);

  display.begin();
  display.setContrast(50);
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(BLACK);
  display.setCursor(0, 0);
  display.println("Iniciando...");
  display.display();
  delay(2000);
  display.clearDisplay();
}

float medirDistancia(int ultraT, int ultraE) {
  digitalWrite(ultraT, LOW);
  delayMicroseconds(2);
  digitalWrite(ultraT, HIGH);
  delayMicroseconds(10);
  digitalWrite(ultraT, LOW);

  long duracao = pulseIn(ultraE, HIGH, 30000);
  if (duracao == 0) return -1.0;
  float distancia = duracao * 0.034 / 2;
  return distancia;
}

void loop() {
  float distancia1 = medirDistancia(ultraT1, ultraE1);

  int sensorAtivado = 0;
  int sensorDesativado = 0;

  if (distancia1 < distanciaLimite && distancia1 > 0) {
    digitalWrite(led1, HIGH);
    sensorAtivado++;
  } else {
    digitalWrite(led1, LOW);
    sensorDesativado++;
  }

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(BLACK);
  display.setCursor(0, 0);
  display.print("Livres: ");
  display.print(sensorDesativado);
  display.setCursor(0, 16);
  display.print("Ocupadas: ");
  display.print(sensorAtivado);
  display.display();

  Serial.print("Livres: ");
  Serial.println(sensorDesativado);
  Serial.print("Ocupado: ");
  Serial.println(sensorAtivado);
  delay(2000);
}
